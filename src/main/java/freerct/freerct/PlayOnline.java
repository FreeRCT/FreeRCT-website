package freerct.freerct;

import java.sql.*;
import java.util.*;

import javax.servlet.http.*;
import org.springframework.stereotype.*;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.context.request.*;

import static freerct.freerct.FreeRCTApplication.generatePage;
import static freerct.freerct.FreeRCTApplication.sql;
import static freerct.freerct.FreeRCTApplication.sqlSync;
import static freerct.freerct.FreeRCTApplication.getCalendar;
import static freerct.freerct.FreeRCTApplication.bash;
import static freerct.freerct.FreeRCTApplication.config;
import static freerct.freerct.FreeRCTApplication.htmlEscape;
import static freerct.freerct.FreeRCTApplication.renderMarkdown;
import static freerct.freerct.FreeRCTApplication.datetimestring;
import static freerct.freerct.FreeRCTApplication.shortDatetimestring;
import static freerct.freerct.FreeRCTApplication.pluralForm;
import static freerct.freerct.FreeRCTApplication.createLinkifiedHeader;
import static freerct.freerct.FreeRCTApplication.generateForumPostForm;

/** The frame that runs FreeRCT as an online WebAssembly game. */
@Controller
public class PlayOnline {
	@GetMapping("/play/play")
	@ResponseBody
	public String play(WebRequest request, HttpSession session, @RequestParam(value="guest", required=false) boolean noLogin) {
		try {

			if (request.getRemoteUser() == null && !noLogin) {
				return generatePage(request, session, "Play FreeRCT Online", """
					<h1>Play FreeRCT Online</h1>
					<div class='grid new_post_form' style='grid-template-columns: 25% auto 25%'>
						<p class='griditem center'                                 style='grid-column:1/span 3; grid-row:1'
								>Any savegames created while playing online will be stored only for logged-in users.</p>
						<a class='griditem form_button form_default_action center' style='grid-column:2/span 1; grid-row:2'
								href='/login?next=/play/play'>Log In</a>
						<a class='griditem form_button center'                     style='grid-column:2/span 1; grid-row:3'
								href='/play/play?guest=true'>Play as Guest</a>
					</div>
				""");
			}

			String body = """
				<h1>Play FreeRCT Online</h1>
				<a class='anchor' id='anchor'></a>

				<p class='forum_description_name'>
					<strong>Note:</strong> The online playing environment is an experimental feature.
					Savegames will <strong>not</strong> be persisted.
				</p>

				<div id='spinner'></div>
				<p class='forum_description_name' id='status'>Preparing...</p>

				<p class='forum_description_stats'>
			"""
			+		"Version: " + bash("bash", "-c", "cd '" + config("freerct") + "' && git describe --tags --always")
			+ """
				</p>

				<form><div class='playonline_button_wrapper'>
					<input type="button" class='form_button' value="Fullscreen" onclick="Module.requestFullscreen(false, true)">
				</div></form>

				<progress hidden value="0" max="100" id="progress"></progress>
				<div class='playonline'>
					<canvas id="canvas" oncontextmenu="event.preventDefault()" tabindex=-1></canvas>
				</div>
				<textarea id="output" readonly rows="2" style='resize: vertical; width: 100%'></textarea>

				<!-- Autogenerated by Emscripten -->

				<script type='text/javascript'>
				  var statusElement = document.getElementById('status');
				  var progressElement = document.getElementById('progress');
				  var spinnerElement = document.getElementById('spinner');

				  var Module = {
					preRun: [],
					postRun: [],
					print: (function() {
					  var element = document.getElementById('output');
					  if (element) element.value = ''; // clear browser cache
					  return function(text) {
						if (arguments.length > 1) text = Array.prototype.slice.call(arguments).join(' ');
						// These replacements are necessary if you render to raw HTML
						//text = text.replace(/&/g, "&amp;");
						//text = text.replace(/</g, "&lt;");
						//text = text.replace(/>/g, "&gt;");
						//text = text.replace('\\n', '<br>', 'g');
						console.log(text);
						if (element) {
						  element.value += text + "\\n";
						  element.scrollTop = element.scrollHeight; // focus on bottom
						}
					  };
					})(),
					canvas: (function() {
					  var canvas = document.getElementById('canvas');

					  // As a default initial behavior, pop up an alert when webgl context is lost. To make your
					  // application robust, you may want to override this behavior before shipping!
					  // See http://www.khronos.org/registry/webgl/specs/latest/1.0/#5.15.2
					  canvas.addEventListener("webglcontextlost", function(e) { alert('WebGL context lost. You will need to reload the page.'); e.preventDefault(); }, false);

					  return canvas;
					})(),
					setStatus: function(text) {
					  if (!Module.setStatus.last) Module.setStatus.last = { time: Date.now(), text: '' };
					  if (text === Module.setStatus.last.text) return;
					  var m = text.match(/([^(]+)\\((\\d+(\\.\\d+)?)\\/(\\d+)\\)/);
					  var now = Date.now();
					  if (m && now - Module.setStatus.last.time < 30) return; // if this is a progress update, skip it if too soon
					  Module.setStatus.last.time = now;
					  Module.setStatus.last.text = text;
					  if (m) {
						text = m[1];
						progressElement.value = parseInt(m[2])*100;
						progressElement.max = parseInt(m[4])*100;
						progressElement.hidden = false;
						spinnerElement.hidden = false;
					  } else {
						progressElement.value = null;
						progressElement.max = null;
						progressElement.hidden = true;
						if (!text) spinnerElement.style.display = 'none';
					  }
					  statusElement.innerHTML = text;
					},
					totalDependencies: 0,
					monitorRunDependencies: function(left) {
					  this.totalDependencies = Math.max(this.totalDependencies, left);
					  Module.setStatus(left ? 'Preparing... (' + (this.totalDependencies-left) + '/' + this.totalDependencies + ')' : 'All downloads complete.');
					}
				  };
				  Module.setStatus('Downloading...');
				  window.onerror = function(event) {
					// TODO: do not warn on ok events like simulating an infinite loop or exitStatus
					Module.setStatus('Exception thrown, see JavaScript console');
					spinnerElement.style.display = 'none';
					Module.setStatus = function(text) {
					  if (text) Module.printErr('[post-exception status] ' + text);
					};
				  };
				</script>
				<script async type="text/javascript" src="/play/freerct.js"></script>

				<script> location.href = "#anchor" /* Jump down to main frame. */ </script>
			""";

			return generatePage(request, session, "Play FreeRCT Online", body);

		} catch (Exception e) {
			return new ErrorHandler().error(request, session, "internal_server_error");
		}
	}
}
